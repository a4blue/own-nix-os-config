# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = ["nvme" "xhci_pci" "ahci" "usb_storage" "usbhid" "sd_mod"];
  boot.initrd.kernelModules = [];
  boot.kernelModules = ["kvm-amd"];
  boot.extraModulePackages = [];

  fileSystems."/" = {
    device = "none";
    fsType = "tmpfs";
    options = ["defaults" "size=512M" "mode=755"];
  };

  fileSystems."/nix" = {
    device = "/dev/disk/by-uuid/4446d92c-ccea-441e-bbf7-d1fc9f09cff6";
    fsType = "bcachefs";
    neededForBoot = true;
    options = ["X-mount.mkdir" "casefold_disabled"];
  };
  fileSystems."/Games" = {
    device = "/dev/disk/by-uuid/2d17f20f-cb73-4026-b693-d6fd7d2adba4";
    fsType = "bcachefs";
    options = ["X-mount.mkdir" "casefold_disabled"];
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/BC23-260A";
    fsType = "vfat";
    options = ["umask=007" "X-mount.mkdir"];
  };

  swapDevices = [
    {
      device = "/dev/disk/by-partuuid/a12907dc-b68e-4e7b-b35f-9404c3776743";
      randomEncryption.enable = true;
    }
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp5s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp4s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
